name: PR - Merge

on:
  pull_request:
  push:

env:
  ECR_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
  BUCKET_TF: pcio-${{ github.ref_name }}-${{ secrets.AWS_ACCOUNT_ID }}-terraform

permissions:
  id-token: write
  contents: read

jobs:
  merge:
    runs-on: ubuntu-24.04

    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log Into ECR
        run: |
          aws ecr get-login-password        \
          --region ${{ vars.AWS_REGION }} | \
            docker login                    \
              --username AWS                \
              --password-stdin ${{ env.ECR_URL }}

      - name: Build Docker Image (API)
        run: |
          docker build                                \
            -t ${{ env.ECR_URL }}/api                 \
            --build-arg API_PORT=${{ secrets.API_PORT }} \
            .
        working-directory: api

      - name: Build Docker Image (UI)
        run: |
          docker build                                \
            -t ${{ env.ECR_URL }}/ui                  \
            --build-arg API_PORT=${{ secrets.UI_PORT }}  \
            .
        working-directory: ui

      - name: Push Docker Image (API)
        run: docker push ${{ env.ECR_URL }}/api:latest
        working-directory: api

      - name: Push Docker Image (UI)
        run: docker push ${{ env.ECR_URL }}/ui:latest
        working-directory: ui

      - name: Initialize Terraform
        run: |
          terraform init                                    \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="bucket=${{ env.BUCKET_TF }}"   \
            -backend-config="key=state/terraform.tfstate"   \
            -var env="${{ github.ref_name }}"
        working-directory: terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform
